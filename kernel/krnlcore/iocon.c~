#include "../include/common.h"

#define VIDEO_ADDRESS 0xB8000

volatile int video_offset = 0;

int colour = 0xF;

void changecolor(int new_color)
{
    colour = new_color;
}

/* thanks to osedev.org for puts and itoa. I've modified them so that they work with offset and don't overwrite the last text. */
void puts(const char *string)
{
    volatile char *video = (volatile char*) VIDEO_ADDRESS + video_offset;
    
    while (*string != 0)
    {
        *video++ = *string++;
        *video++ = colour;
    }
    
    video_offset = video - VIDEO_ADDRESS;
}

char *itoa(int value, char *str, int base)
{
    char * rc;
    char * ptr;
    char * low;
    // Check for supported base.
    if ( base < 2 || base > 36 )
    {
        *str = '\0';
        return str;
    }
    rc = ptr = str;
    // Set '-' for negative decimals.
    if ( value < 0 && base == 10 )
    {
        *ptr++ = '-';
    }
    // Remember where the numbers start.
    low = ptr;
    // The actual conversion.
    do
    {
        // Modulo is negative for negative value. This trick makes abs() unnecessary.
        *ptr++ = "zyxwvutsrqponmlkjihgfedcba9876543210123456789abcdefghijklmnopqrstuvwxyz"[35 + value % base];
        value /= base;
    } while ( value );
    // Terminating the string.
    *ptr-- = '\0';
    // Invert the numbers.
    while ( low < ptr )
    {
        char tmp = *low;
        *low++ = *ptr;
        *ptr-- = tmp;
    }
    return rc;
}